{"mappings":"AAmDAA,SAASC,iBAAiB,oBAjD1BC,iBACEF,SAASG,cAAc,gBAAgBC,mBAAmB,YAAaC,GACvE,IAAIC,EAAS,IAAIC,gBAAgBP,SAASQ,SAASC,QAC/CC,EAAUJ,EAAOK,IAAI,WACrBC,EAAQN,EAAOK,IAAI,UAElBE,EAAcC,SAAkBC,EAAQ,CAAC,WAAY,uBACtDC,EAAiBC,OAAOC,OAAOL,GAAcM,KAAIC,GAAK,CAACA,EAAEC,KAAMD,EAAEE,SAAUF,EAAEG,UAAUH,EAAEI,UACzFC,EAAW,GAEXC,EAAYC,EAAmBC,GAAgBzB,cAAc,UAC7D0B,EAAc,IAAI,IAAIC,IAAId,EAAeG,KAAIC,GAAKA,EAAE,OACxD,IAAK,IAAIW,KAAQF,EAAa,CAC5B,IAAIG,EAAQC,EAAW,IAAK,CAAEC,KAAM,IAAIH,EAAKI,kBAC7CH,EAAMI,UAAYL,EAClB,IAAIM,EAAKJ,EAAW,MAChBK,EAAKL,EAAW,KAAM,CAAEM,MAAO,gBACnCD,EAAGE,YAAYR,GACfK,EAAGG,YAAYF,GACfZ,EAAUvB,cAAc,SAASqC,YAAYH,GAG/C,IAAK,IAAKI,KAAgBzB,EACxBS,EAASiB,KAAK,YAAYD,KAAe/B,KAAWE,KAEtDZ,SAASG,cAAc,gBAAgBqC,YAAYd,GACnD,IAAIiB,QAAgB5B,EAAQU,GACxBmB,EAAQ,EACRC,EAAY,GAChB,IAAK,IAAKC,EAAaC,EAAMC,EAAOC,KAAejC,EAAgB,CAEjE,IAAK6B,EAAUK,SAASH,GAAO,CAC7B,IAAII,EAAKlB,EAAW,KAAM,CAAEmB,GAAIL,EAAKZ,cAAeI,MAAS,gBACzDP,EAAQC,EAAW,IAAK,CAAEC,KAAM,IAAIa,EAAKZ,gBAAiBI,MAAO,cACrEP,EAAMI,UAAYW,EAClBI,EAAGX,YAAYR,GACfhC,SAASG,cAAc,gBAAgBqC,YAAYW,GAErDnD,SAASG,cAAc,gBAAgBqC,YAAYa,EAAiBV,EAAQC,GAAQE,EAAaE,EAAQD,EAAKE,EAAYnC,IAE1H+B,EAAUH,KAAKK,GAEfH,QASJ,MA0CsChB,EAAG,0FAA+BvB,EAAG,myBAAmFiD,EAAA,CAAE,EAAI,IAAI,IAAI,IAAI,IAAI,IAAK,IAAI,GAAI,IAAI,IAAI,IAAI,IAAI,GAAI,GAAI,GAAI,IAAI,IAAI,IAAI,GAAI,IAAI,IAAI,GAAI,IAAI,GAAI,GAAI,IAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAG,GAAG,GAAI,GAAG,GAAG,GAAG,GAAI,GAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAE,GAC1d,GACA,GACA,GAEK,GAED,YACA,GACD,EAGH,EAAuB,GAA6B,EAAwB,EAAwC,EAAyB,GAA0B,GAA2B,EAA4B,EAAkC,EAA8B,EAAgB,EAAY,EAAiB,EAA0B,EAAoB,EAAuB,EAAsB,EAAiC,EAAuB,GAAoEC,EAA2B,GAAEC,EAA8B,OAAE,IAAAC,EAAA,EAAWA,GAZxd,IAYmeA,IAAA,IAAA,IAAAC,EAAA,EAAAA,GAAAJ,EAAAG,EAAA,GAAAC,IAAEH,EAA6Bb,KAAA,CAAEe,EAA6BC,IAAiDF,EAA2Bd,KAAAe,EAAA,IAAAC,SAA2BC,EAAgB,CAAE,aAAY,cAAmB,YAAa,UAAa,eAAa,uBAAE,WAAQ,YAAkB,YAAQ,YAAU,YAAa,aAA6B,YAAM,cAAmB,YAAY,oBAAc,WAAQ,iBAAgBC,MAAA,QAAiCC,IAAA,MAA6BC,MAAA,SAAmC,UAAA,cAA2BC,QAAA,UAA4B,UAAU,WAAe,UAAU,UAAY,WAAW,oBAAe,UAAA,WAAuCC,OAAM,OAAmB,UAAA,UAAwC,aAAU,eAAa,UAAW,iBAAY,cAAY,gBAAY,UAAA,YAAgC,aAAa,gBAAkB,eAAY,YAAY,UAAA,UAAsC,WAAY,cAAa,cAAc,aAAgC,UAAW,aAAaC,OAAA,SAAuB,WAAA,kBAAoC,YAAA,YAAsCC,KAAA,QAAwBC,OAAA,iBAAgCC,OAAA,SAA8B,cAAY,0BAAWC,KAAA,kBAA4B,WAAA,aAA0CC,OAAM,eAAQC,SAAS,sBAAc,YAAA,eAAsC,aAAA,oBAAqC,aAAc,YAAoB,cAAa,YAAO,WAAA,YAAkCC,SAAS,WAAsB,UAAA,cAAwC,cAAO,uBAAcC,KAAA,kBAAiC,gBAAe,sBAAgB,SAAA,YAA+B,UAAA,WAAsC,WAAW,WAAwB,aAAa,iBAAoB,YAAY,iBAAiB,WAAA,WAAoC,eAAW,qBAAY,WAAY,YAAY,eAAa,6BAAW,UAAW,YAAa,YAAa,SAAqB,iBAAa,iBAAmB,eAAU,qBAAW,YAAW,UAAY,YAAW,kBAAmB,UAAA,kBAA8B,WAAY,UAAoB,YAAa,cAAkB,cAAc,0BAAgBC,KAAA,OAA+B,UAAU,WAA4B,eAAa,qBAAgB,iBAAU,kBAAgB,aAAS,mBAAW,YAAa,MAAc,eAAc,iBAAa,UAAA,mBAAoC,eAAW,uBAAkBC,MAAA,aAA8B,YAAY,mBAAe,cAAY,eAAY,gBAAW,aAAW,eAAA,qBACtpG,YAAM,qBACN,YAAM,mBAGN,WAAS,gBACP,eAAa,mBAAqF,UAAQ,WAC3G,WAAA,WAEG,YAAA,UAEJ,UAAS,YACP,YAAK,oBAEL,YAAW,kBACX,SAAU,UAGV,UAAO,WACR,UAAA,kBAEG,aAAA,eAAY,aAAA,iBAAwD,cAAA,eAA6D,aAAA,eACjI,eAAA,cAAc,SAAA,2BAAa,YAAO,eAAC,SAAA,eAEvCC,QAAA,UACA,YAAA,aACA,aAAe,YACb,eAAgB,mBAChB,UAAW,4BACT,8BAAa,uBAAU,qBACvB,WAEFC,EACY5D,OAAI6D,KAAAnB,GAAyF1C,OAAAC,OAAAyC,GAQ3G,IAAAoB,EAAe,IAAAC,mBACT/C,EAASgD,EAAAC,GACRA,IAAYA,EACX,QACFC,EAAQnF,SAASoF,cAAgBH,OACjC,IAAII,EAAAC,KACFrE,OAAOsE,QAAQL,GAAAC,EAAAK,aAAAH,EAAAC,UACjBH,MAGLM,EAAA,CAED,uDACA,8DAEEC,EAAO,aAAwD,wBAKhE3E,EAAA4E,EAAAC,GAED,IAAAC,GAAA,EACSC,MAAAC,QAAAJ,KACHA,EAAY,CACZA,GAEAE,GAAY,OAA2CG,QAAAC,QAAAC,IAAAP,EAAAxE,KAAAgF,kBAMvBP,EAAAQ,GAEpC,IAAAC,EACA,IAAA,IAASC,KAAAV,EAAc,IAGxB,GADCS,QAAeE,MAAAD,EAAAF,GAChBC,EAAAG,GAAA,OAAAH,EAEK,MAACjF,IACL,OAAIiF,EAfuDI,UAkB/CN,EAAgCP,UAC7CA,EAAAA,GAAAH,uCAnB4DiB,CAAAP,EAAAP,IAAAe,MAAAN,GAAAA,EAAAO,YAE3DC,MAASC,QAAAC,OACT,OAAAlB,EAAoBG,EAAA,GACpBA,0GA7HA","sources":["code/data.js"],"sourcesContent":["\r\n\r\nasync function ready() {\r\n  document.querySelector('#mycontainer').insertAdjacentHTML('beforeend', searchBar)\r\n  let params = new URLSearchParams(document.location.search);\r\n  let chapter = params.get(\"chapter\");\r\n  let verse = params.get(\"verse\")\r\n\r\n  let [editionsJSON, isocodes] = await getJSON(['editions', 'isocodes/iso-codes'])\r\n  let edtionsLangArr = Object.values(editionsJSON).map(e => [e.name, e.language, e.direction,e.author])\r\n  let linksArr = []\r\n  // Table of content\r\n  let tableElem = getElementFromHTML(tableContainer).querySelector('.table')\r\n  let uniqueLangs = [...new Set(edtionsLangArr.map(e => e[1]))]\r\n  for (let lang of uniqueLangs) {\r\n    let aElem = getElement('a', { href: `#${lang.toLowerCase()}` })\r\n    aElem.innerText = lang\r\n    let tr = getElement('tr')\r\n    let td = getElement('td', { class: 'text-center' })\r\n    td.appendChild(aElem)\r\n    tr.appendChild(td)\r\n    tableElem.querySelector('tbody').appendChild(tr)\r\n  }\r\n  // Create endpoints for parallel fetch\r\n  for (let [editionName] of edtionsLangArr)\r\n    linksArr.push(`editions/${editionName}/${chapter}/${verse}`)\r\n\r\n  document.querySelector('#mycontainer').appendChild(tableElem)\r\n  let dataArr = await getJSON(linksArr)\r\n  let count = 0\r\n  let langCheck = []\r\n  for (let [editionName, lang, dirval,authorName] of edtionsLangArr) {\r\n    // create language heading only if one doesn't exists\r\n    if (!langCheck.includes(lang)) {\r\n      let h2 = getElement('h2', { id: lang.toLowerCase(), 'class': 'text-center' })\r\n      let aElem = getElement('a', { href: `#${lang.toLowerCase()}`, class: \"link-dark\" })\r\n      aElem.innerText = lang\r\n      h2.appendChild(aElem)\r\n      document.querySelector('#mycontainer').appendChild(h2)\r\n    }\r\n    document.querySelector('#mycontainer').appendChild(getQuranCardElem(dataArr[count], editionName, dirval, lang,authorName, isocodes))\r\n\r\n    langCheck.push(lang)\r\n\r\n    count++;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);\r\n\nconst htmlQuranContainer =\r\n  `    \r\n<div class=\"card text-dark bg-light m-3\">\r\n<div class=\"card-body\">\r\n<div class=\"card-text lead m-1\"></div>\r\n</div>\r\n\r\n<span id=\"footercontainer\">\r\n</span>\r\n\r\n</div>\r\n`\r\n\r\nconst tableContainer =\r\n  `\r\n<table class=\"table table-hover  table-striped\">\r\n  <tbody>\r\n\r\n  </tbody>\r\n</table>\r\n`\r\n\r\nconst searchBar =\r\n  `\r\n<div class=\"m-3 d-none\">\r\n<form class=\"d-flex\" onsubmit=\"beginSearch(); return false\">\r\n  <input id=\"searchquery\" class=\"form-control mr-2\" type=\"search\" placeholder=\"Search Quran Verse\" aria-label=\"Search Quran Verse\" />\r\n  <button id=\"searchbtn\" class=\"btn btn-outline-info\" type=\"button\" onclick=\"beginSearch(); return false\">\r\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-search\" fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path fill-rule=\"evenodd\"\r\n        d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n      <path fill-rule=\"evenodd\"\r\n        d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n    </svg>\r\n  </button>\r\n</form>\r\n</div>\r\n`\r\nconst CHAPTER_LENGTH = 114\r\n// Creating line to [chapter,verseNo] mappings\r\n// Array containing number of verses in each chapters\r\nconst chaplength = [7, 286, 200, 176, 120, 165, 206, 75, 129, 109, 123, 111, 43, 52, 99, 128, 111, 110, 98, 135, 112, 78, 118, 64, 77, 227, 93, 88, 69, 60, 34, 30, 73, 54, 45, 83, 182, 88, 75, 85, 54, 53, 89, 59, 37, 35, 38, 29, 18, 45, 60, 49, 62, 55, 78, 96, 29, 22, 24, 13, 14, 11, 11, 18, 12, 12, 30, 52, 52, 44, 28, 28, 20, 56, 40, 31, 50, 40, 46, 42, 29, 19, 36, 25, 22, 17, 19, 26, 30, 20, 15, 21, 11, 8, 8, 19, 5, 8, 8, 11, 11, 8, 3, 9, 5, 4, 7, 3, 6, 3, 5, 4, 5, 6]\r\n// contains chapter verse mappings for each line\r\nconst mappings = []\r\nconst mappingsStr = []\r\n\r\nfor (let i = 1; i <= CHAPTER_LENGTH; i++) {\r\n  for (let j = 1; j <= chaplength[i - 1]; j++) {\r\n    mappings.push([i, j])\r\n    mappingsStr.push(i + ',' + j)\r\n  }\r\n}\r\n\r\nconst chaptersJSON = { 'Al-Faatiha': 'The Opening', 'Al-Baqara': 'The Cow', 'Aal-i-Imraan': 'The Family of Imraan', 'An-Nisaa': 'The Women', 'Al-Maaida': 'The Table', \"Al-An'aam\": 'The Cattle', \"Al-A'raaf\": 'The Heights', 'Al-Anfaal': 'The Spoils of War', 'At-Tawba': 'The Repentance', Yunus: 'Jonas', Hud: 'Hud', Yusuf: 'Joseph', \"Ar-Ra'd\": 'The Thunder', Ibrahim: 'Abraham', 'Al-Hijr': 'The Rock', 'An-Nahl': 'The Bee', 'Al-Israa': 'The Night Journey', 'Al-Kahf': 'The Cave', Maryam: 'Mary', 'Taa-Haa': 'Taa-Haa', 'Al-Anbiyaa': 'The Prophets', 'Al-Hajj': 'The Pilgrimage', 'Al-Muminoon': 'The Believers', 'An-Noor': 'The Light', 'Al-Furqaan': 'The Criterion', \"Ash-Shu'araa\": 'The Poets', 'An-Naml': 'The Ant', 'Al-Qasas': 'The Stories', 'Al-Ankaboot': 'The Spider', 'Ar-Room': 'The Romans', Luqman: 'Luqman', 'As-Sajda': 'The Prostration', 'Al-Ahzaab': 'The Clans', Saba: 'Sheba', Faatir: 'The Originator', Yaseen: 'Yaseen', 'As-Saaffaat': 'Those drawn up in Ranks', Saad: 'The letter Saad', 'Az-Zumar': 'The Groups', Ghafir: 'The Forgiver', Fussilat: 'Explained in detail', 'Ash-Shura': 'Consultation', 'Az-Zukhruf': 'Ornaments of gold', 'Ad-Dukhaan': 'The Smoke', 'Al-Jaathiya': 'Crouching', 'Al-Ahqaf': 'The Dunes', Muhammad: 'Muhammad', 'Al-Fath': 'The Victory', 'Al-Hujuraat': 'The Inner Apartments', Qaaf: 'The letter Qaaf', 'Adh-Dhaariyat': 'The Winnowing Winds', 'At-Tur': 'The Mount', 'An-Najm': 'The Star', 'Al-Qamar': 'The Moon', 'Ar-Rahmaan': 'The Beneficent', 'Al-Waaqia': 'The Inevitable', 'Al-Hadid': 'The Iron', 'Al-Mujaadila': 'The Pleading Woman', 'Al-Hashr': 'The Exile', 'Al-Mumtahana': 'She that is to be examined', 'As-Saff': 'The Ranks', \"Al-Jumu'a\": 'Friday', 'Al-Munaafiqoon': 'The Hypocrites', 'At-Taghaabun': 'Mutual Disillusion', 'At-Talaaq': 'Divorce', 'At-Tahrim': 'The Prohibition', 'Al-Mulk': 'The Sovereignty', 'Al-Qalam': 'The Pen', 'Al-Haaqqa': 'The Reality', \"Al-Ma'aarij\": 'The Ascending Stairways', Nooh: 'Noah', 'Al-Jinn': 'The Jinn', 'Al-Muzzammil': 'The Enshrouded One', 'Al-Muddaththir': 'The Cloaked One', 'Al-Qiyaama': 'The Resurrection', 'Al-Insaan': 'Man', 'Al-Mursalaat': 'The Emissaries', 'An-Naba': 'The Announcement', \"An-Naazi'aat\": 'Those who drag forth', Abasa: 'He frowned', 'At-Takwir': 'The Overthrowing', 'Al-Infitaar': 'The Cleaving', 'Al-Mutaffifin': 'Defrauding', 'Al-Inshiqaaq': 'The Splitting Open', 'Al-Burooj': 'The Constellations', 'At-Taariq': 'The Morning Star', \"Al-A'laa\": 'The Most High', 'Al-Ghaashiya': 'The Overwhelming', 'Al-Fajr': 'The Dawn', 'Al-Balad': 'The City', 'Ash-Shams': 'The Sun', 'Al-Lail': 'The Night', 'Ad-Dhuhaa': 'The Morning Hours', 'Ash-Sharh': 'The Consolation', 'At-Tin': 'The Fig', 'Al-Alaq': 'The Clot', 'Al-Qadr': 'The Power, Fate', 'Al-Bayyina': 'The Evidence', 'Az-Zalzala': 'The Earthquake', 'Al-Aadiyaat': 'The Chargers', \"Al-Qaari'a\": 'The Calamity', 'At-Takaathur': 'Competition', 'Al-Asr': 'The Declining Day, Epoch', 'Al-Humaza': 'The Traducer', 'Al-Fil': 'The Elephant', Quraish: 'Quraysh', \"Al-Maa'un\": 'Almsgiving', 'Al-Kawthar': 'Abundance', 'Al-Kaafiroon': 'The Disbelievers', 'An-Nasr': 'Divine Support', 'Al-Masad': 'The Palm Fibre', 'Al-Ikhlaas': 'Sincerity', 'Al-Falaq': 'The Dawn', 'An-Naas': 'Mankind' }\r\nconst arabicChapters = Object.keys(chaptersJSON)\r\nconst englishChapters = Object.values(chaptersJSON)\r\n\r\n\r\nfunction capitalize(words) {\r\n  return words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\r\n}\r\n\r\nlet htmlparser = new DOMParser();\r\n\r\nfunction getElement(elementName, attributesObj) {\r\n  if (!attributesObj)\r\n    attributesObj = {}\r\n  let element = document.createElement(elementName);\r\n  for (let [key, value] of Object.entries(attributesObj)) {\r\n    element.setAttribute(key, value);\r\n  }\r\n  return element\r\n}\r\n\r\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\r\nlet extensions = [\".min.json\", \".json\"]\r\n\r\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\r\n// Get links async i.e in parallel\r\nasync function getJSON(endpoints, links) {\r\n  let returnSingle = false\r\n  if (!Array.isArray(endpoints)) {\r\n    endpoints = [endpoints]\r\n    returnSingle = true\r\n  }\r\n  let result = await Promise.all(\r\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\r\n  ).catch(console.error)\r\n  if (returnSingle)\r\n    return result[0]\r\n  return result\r\n}\r\n\r\n\r\nasync function fetchWithFallback(links, obj) {\r\n  let response;\r\n  for (let link of links) {\r\n    try {\r\n      response = await fetch(link, obj)\r\n      if (response.ok)\r\n        return response\r\n    } catch (e) { }\r\n  }\r\n  return response\r\n}\r\n\r\n// convert endpoint into multiple urls, including fallback urls\r\nfunction getURLs(endpoint, links) {\r\n  links = links || apiLinks\r\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\r\n}\r\n\r\nfunction getElementFromHTML(htmlString) {\r\n  return htmlparser.parseFromString(htmlString, \"text/html\");\r\n}\r\n\r\n// pass hadith object & get card element with all hadith info in it\r\nfunction getQuranCardElem(quran, editionName, dirval, lang, authorName, isocodes) {\r\n  let lowerLang = lang.toLowerCase()\r\n  let cardElem = getElementFromHTML(htmlQuranContainer).querySelector('.card')\r\n  cardElem.querySelector('.card-text').innerText = quran.text\r\n  let footerDiv = getElement('div', { class: \"card-footer\" })\r\n  let hrefVal = `quran:${editionName}:${quran.chapter}:${quran.verse}`\r\n  cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >${authorName}</a> <br>`);\r\n  cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Chapter ${quran.chapter} ${arabicChapters[quran.chapter - 1]}, Verse ${quran.verse}</a> <br>`);\r\n  cardElem.setAttribute('id', hrefVal)\r\n\r\n  cardElem.querySelector('.card-text').setAttribute('dir', dirval)\r\n  cardElem.querySelector('.card-text').setAttribute('lang', isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\r\n\r\n  return cardElem\r\n}\r\n\r\nwindow.beginSearch = function () {\r\n  let newparams = new URLSearchParams();\r\n  let searchquery = document.getElementById('searchquery').value\r\n  newparams.set('q', `site:fawazahmed0.github.io/quran ${searchquery}`)\r\n  window.open('https://www.google.com/search?' + newparams.toString(), '_blank');\r\n}\r\n\r\n\r\n"],"names":["document","addEventListener","async","querySelector","insertAdjacentHTML","$7fb36df3dd35402c$var$searchBar","params","URLSearchParams","location","search","chapter","get","verse","editionsJSON","isocodes","$7fb36df3dd35402c$var$getJSON","edtionsLangArr","Object","values","map","e","name","language","direction","author","linksArr","tableElem","$7fb36df3dd35402c$var$getElementFromHTML","$7fb36df3dd35402c$var$tableContainer","uniqueLangs","Set","lang","aElem","$7fb36df3dd35402c$var$getElement","href","toLowerCase","innerText","tr","td","class","appendChild","editionName","push","dataArr","count","langCheck","editionName1","lang1","dirval","authorName","includes","h2","id","$7fb36df3dd35402c$var$getQuranCardElem","$7fb36df3dd35402c$var$chaplength","$7fb36df3dd35402c$var$mappings","$7fb36df3dd35402c$var$mappingsStr","i","j","$7fb36df3dd35402c$var$chaptersJSON","Yunus","Hud","Yusuf","Ibrahim","Maryam","Luqman","Saba","Faatir","Yaseen","Saad","Ghafir","Fussilat","Muhammad","Qaaf","Nooh","Abasa","Quraish","$7fb36df3dd35402c$var$arabicChapters","keys","$7fb36df3dd35402c$var$htmlparser","DOMParser","elementName","attributesObj","element","createElement","key","value","entries","setAttribute","$7fb36df3dd35402c$var$apiLinks","$7fb36df3dd35402c$var$extensions","endpoints","links","returnSingle","Array","isArray","result","Promise","all","endpoint","obj","response","link","fetch","ok","$7fb36df3dd35402c$var$fetchWithFallback","$7fb36df3dd35402c$var$getURLs","then","json","catch","console","error"],"version":3,"file":"data.1c591a96.js.map"}