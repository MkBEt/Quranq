{"mappings":"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","sources":["./node_modules/@parcel/runtime-js/lib/bundle-manifest.js","./node_modules/@parcel/runtime-js/lib/JSRuntime.js","./node_modules/@parcel/runtime-js/lib/bundle-url.js","./node_modules/@parcel/runtime-js/lib/relative-path.js","./Documents/GitHub/quran/script.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _plugin() {\n  const data = require(\"@parcel/plugin\");\n\n  _plugin = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _utils() {\n  const data = require(\"@parcel/utils\");\n\n  _utils = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _nullthrows() {\n  const data = _interopRequireDefault(require(\"nullthrows\"));\n\n  _nullthrows = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// List of browsers that support dynamic import natively\n// https://caniuse.com/#feat=es6-module-dynamic-import\nconst DYNAMIC_IMPORT_BROWSERS = {\n  edge: '76',\n  firefox: '67',\n  chrome: '63',\n  safari: '11.1',\n  opera: '50'\n}; // Used for as=\"\" in preload/prefetch\n\nconst TYPE_TO_RESOURCE_PRIORITY = {\n  css: 'style',\n  js: 'script'\n};\nconst BROWSER_PRELOAD_LOADER = './loaders/browser/preload-loader';\nconst BROWSER_PREFETCH_LOADER = './loaders/browser/prefetch-loader';\nconst LOADERS = {\n  browser: {\n    css: './loaders/browser/css-loader',\n    html: './loaders/browser/html-loader',\n    js: './loaders/browser/js-loader',\n    wasm: './loaders/browser/wasm-loader',\n    IMPORT_POLYFILL: './loaders/browser/import-polyfill'\n  },\n  worker: {\n    js: './loaders/worker/js-loader',\n    wasm: './loaders/worker/wasm-loader',\n    IMPORT_POLYFILL: false\n  },\n  node: {\n    css: './loaders/node/css-loader',\n    html: './loaders/node/html-loader',\n    js: './loaders/node/js-loader',\n    wasm: './loaders/node/wasm-loader',\n    IMPORT_POLYFILL: null\n  }\n};\n\nfunction getLoaders(ctx) {\n  if (ctx.isWorker()) return LOADERS.worker;\n  if (ctx.isBrowser()) return LOADERS.browser;\n  if (ctx.isNode()) return LOADERS.node;\n  return null;\n} // This cache should be invalidated if new dependencies get added to the bundle without the bundle objects changing\n// This can happen when we reuse the BundleGraph between subsequent builds\n\n\nlet bundleDependencies = new WeakMap();\n\nvar _default = new (_plugin().Runtime)({\n  apply({\n    bundle,\n    bundleGraph,\n    options\n  }) {\n    // Dependency ids in code replaced with referenced bundle names\n    // Loader runtime added for bundle groups that don't have a native loader (e.g. HTML/CSS/Worker - isURL?),\n    // and which are not loaded by a parent bundle.\n    // Loaders also added for modules that were moved to a separate bundle because they are a different type\n    // (e.g. WASM, HTML). These should be preloaded prior to the bundle being executed. Replace the entry asset(s)\n    // with the preload module.\n    if (bundle.type !== 'js') {\n      return;\n    }\n\n    let {\n      asyncDependencies,\n      otherDependencies\n    } = getDependencies(bundle);\n    let assets = [];\n\n    for (let dependency of asyncDependencies) {\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if (resolved == null) {\n        continue;\n      }\n\n      if (resolved.type === 'asset') {\n        if (!bundle.env.shouldScopeHoist) {\n          // If this bundle already has the asset this dependency references,\n          // return a simple runtime of `Promise.resolve(internalRequire(assetId))`.\n          // The linker handles this for scope-hoisting.\n          assets.push({\n            filePath: __filename,\n            code: `module.exports = Promise.resolve(module.bundle.root(${JSON.stringify(bundleGraph.getAssetPublicId(resolved.value))}))`,\n            dependency\n          });\n        }\n      } else {\n        let loaderRuntime = getLoaderRuntime({\n          bundle,\n          dependency,\n          bundleGraph,\n          bundleGroup: resolved.value,\n          options\n        });\n\n        if (loaderRuntime != null) {\n          assets.push(loaderRuntime);\n        }\n      }\n    }\n\n    for (let dependency of otherDependencies) {\n      // Resolve the dependency to a bundle. If inline, export the dependency id,\n      // which will be replaced with the contents of that bundle later.\n      let referencedBundle = bundleGraph.getReferencedBundle(dependency, bundle);\n\n      if (referencedBundle !== null && referencedBundle !== void 0 && referencedBundle.isInline) {\n        assets.push({\n          filePath: _path().default.join(__dirname, `/bundles/${referencedBundle.id}.js`),\n          code: `module.exports = ${JSON.stringify(dependency.id)};`,\n          dependency\n        });\n        continue;\n      } // Otherwise, try to resolve the dependency to an external bundle group\n      // and insert a URL to that bundle.\n\n\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if (dependency.isURL && resolved == null) {\n        // If a URL dependency was not able to be resolved, add a runtime that\n        // exports the original moduleSpecifier.\n        assets.push({\n          filePath: __filename,\n          code: `module.exports = ${JSON.stringify(dependency.moduleSpecifier)}`,\n          dependency\n        });\n        continue;\n      }\n\n      if (resolved == null || resolved.type !== 'bundle_group') {\n        continue;\n      }\n\n      let bundleGroup = resolved.value;\n      let mainBundle = (0, _nullthrows().default)(bundleGraph.getBundlesInBundleGroup(bundleGroup).find(b => {\n        let entries = b.getEntryAssets();\n        return entries.some(e => bundleGroup.entryAssetId === e.id);\n      }));\n\n      if (bundle.env.outputFormat === 'commonjs' && mainBundle.type === 'js') {\n        assets.push({\n          filePath: __filename,\n          dependency,\n          code: `module.exports = require(\"./\" + ${getRelativePathExpr(bundle, mainBundle, options)})`\n        });\n        continue;\n      } // URL dependency or not, fall back to including a runtime that exports the url\n\n\n      assets.push(getURLRuntime(dependency, bundle, mainBundle, options));\n    } // In development, bundles can be created lazily. This means that the parent bundle may not\n    // know about all of the sibling bundles of a child when it is written for the first time.\n    // Therefore, we need to also ensure that the siblings are loaded when the child loads.\n\n\n    if (options.shouldBuildLazily && bundle.env.outputFormat === 'global') {\n      let referenced = bundleGraph.getReferencedBundles(bundle).filter(b => !b.isInline);\n\n      for (let referencedBundle of referenced) {\n        let loaders = getLoaders(bundle.env);\n\n        if (!loaders) {\n          continue;\n        }\n\n        let loader = loaders[referencedBundle.type];\n\n        if (!loader) {\n          continue;\n        }\n\n        let relativePathExpr = getRelativePathExpr(bundle, referencedBundle, options);\n        let loaderCode = `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`;\n        assets.push({\n          filePath: __filename,\n          code: loaderCode,\n          isEntry: true\n        });\n      }\n    }\n\n    if (shouldUseRuntimeManifest(bundle, options) && bundleGraph.getChildBundles(bundle).length > 0 && isNewContext(bundle, bundleGraph)) {\n      assets.push({\n        filePath: __filename,\n        code: getRegisterCode(bundle, bundleGraph),\n        isEntry: true\n      });\n    }\n\n    return assets;\n  }\n\n});\n\nexports.default = _default;\n\nfunction getDependencies(bundle) {\n  let cachedDependencies = bundleDependencies.get(bundle);\n\n  if (cachedDependencies) {\n    return cachedDependencies;\n  } else {\n    let asyncDependencies = [];\n    let otherDependencies = [];\n    bundle.traverse(node => {\n      if (node.type !== 'dependency') {\n        return;\n      }\n\n      let dependency = node.value;\n\n      if (dependency.isAsync && !dependency.isURL) {\n        asyncDependencies.push(dependency);\n      } else {\n        otherDependencies.push(dependency);\n      }\n    });\n    bundleDependencies.set(bundle, {\n      asyncDependencies,\n      otherDependencies\n    });\n    return {\n      asyncDependencies,\n      otherDependencies\n    };\n  }\n}\n\nfunction getLoaderRuntime({\n  bundle,\n  dependency,\n  bundleGroup,\n  bundleGraph,\n  options\n}) {\n  let loaders = getLoaders(bundle.env);\n\n  if (loaders == null) {\n    return;\n  }\n\n  let externalBundles = bundleGraph.getBundlesInBundleGroup(bundleGroup).filter(bundle => !bundle.isInline);\n  let mainBundle = (0, _nullthrows().default)(externalBundles.find(bundle => {\n    var _bundle$getMainEntry;\n\n    return ((_bundle$getMainEntry = bundle.getMainEntry()) === null || _bundle$getMainEntry === void 0 ? void 0 : _bundle$getMainEntry.id) === bundleGroup.entryAssetId;\n  })); // CommonJS is a synchronous module system, so there is no need to load bundles in parallel.\n  // Importing of the other bundles will be handled by the bundle group entry.\n  // Do the same thing in library mode for ES modules, as we are building for another bundler\n  // and the imports for sibling bundles will be in the target bundle.\n  // Also do this when building lazily or the runtime itself could get deduplicated and only\n  // exist in the parent. This causes errors if an old version of the parent without the runtime\n  // is already loaded.\n\n  if (bundle.env.outputFormat === 'commonjs' || bundle.env.isLibrary || options.shouldBuildLazily) {\n    externalBundles = [mainBundle];\n  } else {\n    // Otherwise, load the bundle group entry after the others.\n    externalBundles.splice(externalBundles.indexOf(mainBundle), 1);\n    externalBundles.reverse().push(mainBundle);\n  } // Determine if we need to add a dynamic import() polyfill, or if all target browsers support it natively.\n\n\n  let needsDynamicImportPolyfill = false;\n\n  if (bundle.env.isBrowser() && bundle.env.outputFormat === 'esmodule') {\n    needsDynamicImportPolyfill = !bundle.env.matchesEngines(DYNAMIC_IMPORT_BROWSERS);\n  }\n\n  let loaderModules = externalBundles.map(to => {\n    let loader = loaders[to.type];\n\n    if (!loader) {\n      return;\n    }\n\n    let relativePathExpr = getRelativePathExpr(bundle, to, options); // Use esmodule loader if possible\n\n    if (to.type === 'js' && to.env.outputFormat === 'esmodule') {\n      if (!needsDynamicImportPolyfill) {\n        return `import(\"./\" + ${relativePathExpr})`;\n      }\n\n      loader = (0, _nullthrows().default)(loaders.IMPORT_POLYFILL, `No import() polyfill available for context '${bundle.env.context}'`);\n    } else if (to.type === 'js' && to.env.outputFormat === 'commonjs') {\n      return `Promise.resolve(require(\"./\" + ${relativePathExpr}))`;\n    }\n\n    let code = `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`; // In development, clear the require cache when an error occurs so the\n    // user can try again (e.g. after fixing a build error).\n\n    if (options.mode === 'development' && bundle.env.outputFormat === 'global') {\n      code += '.catch(err => {delete module.bundle.cache[module.id]; throw err;})';\n    }\n\n    return code;\n  }).filter(Boolean);\n\n  if (bundle.env.context === 'browser' && !options.shouldBuildLazily) {\n    loaderModules.push(...externalBundles // TODO: Allow css to preload resources as well\n    .filter(to => to.type === 'js').flatMap(from => {\n      let {\n        preload,\n        prefetch\n      } = getHintedBundleGroups(bundleGraph, from);\n      return [...getHintLoaders(bundleGraph, bundle, preload, BROWSER_PRELOAD_LOADER, options), ...getHintLoaders(bundleGraph, bundle, prefetch, BROWSER_PREFETCH_LOADER, options)];\n    }));\n  }\n\n  if (loaderModules.length === 0) {\n    return;\n  }\n\n  let loaderCode = loaderModules.join(', ');\n\n  if (loaderModules.length > 1 && (bundle.env.outputFormat === 'global' || !externalBundles.every(b => b.type === 'js'))) {\n    loaderCode = `Promise.all([${loaderCode}])`;\n\n    if (bundle.env.outputFormat !== 'global') {\n      loaderCode += `.then(r => r[r.length - 1])`;\n    }\n  } else {\n    loaderCode = `(${loaderCode})`;\n  }\n\n  if (bundle.env.outputFormat === 'global' && mainBundle.type === 'js') {\n    loaderCode += `.then(() => module.bundle.root('${bundleGraph.getAssetPublicId(bundleGraph.getAssetById(bundleGroup.entryAssetId))}')${// In global output with scope hoisting, functions return exports are\n    // always returned. Otherwise, the exports are returned.\n    bundle.env.shouldScopeHoist ? '()' : ''})`;\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = ${loaderCode};`,\n    dependency\n  };\n}\n\nfunction getHintedBundleGroups(bundleGraph, bundle) {\n  let preload = [];\n  let prefetch = [];\n  let {\n    asyncDependencies\n  } = getDependencies(bundle);\n\n  for (let dependency of asyncDependencies) {\n    var _dependency$meta;\n\n    let attributes = (_dependency$meta = dependency.meta) === null || _dependency$meta === void 0 ? void 0 : _dependency$meta.importAttributes;\n\n    if (typeof attributes === 'object' && attributes != null && ( // $FlowFixMe\n    attributes.preload || attributes.prefetch)) {\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if ((resolved === null || resolved === void 0 ? void 0 : resolved.type) === 'bundle_group') {\n        // === true for flow\n        if (attributes.preload === true) {\n          preload.push(resolved.value);\n        }\n\n        if (attributes.prefetch === true) {\n          prefetch.push(resolved.value);\n        }\n      }\n    }\n  }\n\n  return {\n    preload,\n    prefetch\n  };\n}\n\nfunction getHintLoaders(bundleGraph, from, bundleGroups, loader, options) {\n  let hintLoaders = [];\n\n  for (let bundleGroupToPreload of bundleGroups) {\n    let bundlesToPreload = bundleGraph.getBundlesInBundleGroup(bundleGroupToPreload);\n\n    for (let bundleToPreload of bundlesToPreload) {\n      let relativePathExpr = getRelativePathExpr(from, bundleToPreload, options);\n      let priority = TYPE_TO_RESOURCE_PRIORITY[bundleToPreload.type];\n      hintLoaders.push(`require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr}, ${priority ? JSON.stringify(priority) : 'null'}, ${JSON.stringify(bundleToPreload.target.env.outputFormat === 'esmodule')})`);\n    }\n  }\n\n  return hintLoaders;\n}\n\nfunction isNewContext(bundle, bundleGraph) {\n  let parents = bundleGraph.getParentBundles(bundle);\n  return bundle.isEntry || parents.length === 0 || parents.some(parent => parent.env.context !== bundle.env.context || parent.type !== 'js');\n}\n\nfunction getURLRuntime(dependency, from, to, options) {\n  let relativePathExpr = getRelativePathExpr(from, to, options);\n\n  if (dependency.meta.webworker === true) {\n    return {\n      filePath: __filename,\n      code: `module.exports = require('./get-worker-url')(${relativePathExpr});`,\n      dependency\n    };\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = require('./bundle-url').getBundleURL() + ${relativePathExpr}`,\n    dependency\n  };\n}\n\nfunction getRegisterCode(entryBundle, bundleGraph) {\n  let idToName = {};\n  bundleGraph.traverseBundles((bundle, _, actions) => {\n    if (bundle.isInline) {\n      return;\n    }\n\n    idToName[bundle.publicId] = (0, _nullthrows().default)(bundle.name);\n\n    if (bundle !== entryBundle && isNewContext(bundle, bundleGraph)) {\n      // New contexts have their own manifests, so there's no need to continue.\n      actions.skipChildren();\n    }\n  }, entryBundle);\n  return \"require('./bundle-manifest').register(JSON.parse(\" + JSON.stringify(JSON.stringify(idToName)) + '));';\n}\n\nfunction getRelativePathExpr(from, to, options) {\n  if (shouldUseRuntimeManifest(from, options)) {\n    return `require('./relative-path')(${JSON.stringify(from.publicId)}, ${JSON.stringify(to.publicId)})`;\n  }\n\n  return JSON.stringify((0, _utils().relativeBundlePath)(from, to, {\n    leadingDotSlash: false\n  }));\n}\n\nfunction shouldUseRuntimeManifest(bundle, options) {\n  let env = bundle.env;\n  return !env.isLibrary && env.outputFormat === 'global' && env.isBrowser() && options.mode === 'production';\n}","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","// This is the main script\r\n\r\n// Fix issue for parcel/babel, for async await thing for old browser, or only support new browsers with async await functionality\r\n// https://flaviocopes.com/parcel-regeneratorruntime-not-defined/\r\n// import 'regenerator-runtime/runtime'\r\n// Fix issue for parcel jquery script\r\n// https://github.com/parcel-bundler/parcel/issues/333#issuecomment-504552272\r\n// https://www.npmjs.com/package/jquery\r\n// import $ from 'jquery'\r\n// import Cookies from 'js-cookie'\r\n\r\nconst apiLink = 'https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1'\r\nconst editionsLink = apiLink + '/editions'\r\n\r\nconst defaultEdition = 'eng-miraneesuddin'\r\n\r\nconst CHAPTER_LENGTH = 114\r\n\r\nlet editionsJSON\r\n\r\n// call this only once\r\nasync function oneTimeFunc () {\r\n  // Editions JSON from quran api\r\n  [editionsJSON] = await getLinksJSON([editionsLink + '.min.json'])\r\n  // Create the dropdown\r\n  await createDropdown()\r\n\r\n  // first set edition, then chapter, then verse\r\n  setInitEditions()\r\n  setInitChapter()\r\n  // show the translations on cookie/link selected values\r\n  await window.showTranslations()\r\n  setInitVerse()\r\n    // Add searchable select\r\n    $('select').select2({\r\n      theme: 'bootstrap4',\r\n    });\r\n   // In chrome the onchange event on select verse option doesn't work due to select2\r\n   // So doing that thing again in here\r\n    $('#verse').on(\"select2:select\", function(e) { \r\n     location = location.hash\r\n   });\r\n\r\n}\r\n\r\n\r\n\r\nfunction setInitEditions () {\r\n  // Set by url\r\n  const currenturl = new URL(window.location)\r\n  const urlparams = currenturl.searchParams\r\n\r\n  if (urlparams.get('editions') !== null) {\r\n    urlparams.get('editions').split(',').map(e => $('#translationdropdown option[value=\"' + e + '\"]').prop('selected', true))\r\n    return\r\n  }\r\n\r\n  // Set editions by cookie\r\n  const editionCookie = Cookies.get('editions')\r\n  if (editionCookie !== undefined) {\r\n    JSON.parse(editionCookie).map(e => $('#translationdropdown option[value=\"' + e + '\"]').prop('selected', true))\r\n    return\r\n  }\r\n  // set to default edition\r\n  $('#translationdropdown option[value=\"' + defaultEdition + '\"]').prop('selected', true)\r\n}\r\n\r\nfunction setInitChapter () {\r\n  // Set chapter by url\r\n  if (window.location.hash !== '') {\r\n    const chapterVerse = window.location.hash.substring(1).split(':')\r\n    $('#chapter option[value=\"' + chapterVerse[0] + '\"]').prop('selected', true)\r\n    return\r\n  }\r\n  // Set chapter by cookie\r\n  const chapterCookie = Cookies.get('chapter')\r\n  if (chapterCookie !== undefined) {\r\n    $('#chapter option[value=\"' + chapterCookie + '\"]').prop('selected', true)\r\n    return\r\n  }\r\n\r\n  // Set chapter to 1 if all the above doesn't work\r\n  $('#chapter option[value=\"1\"]').prop('selected', true)\r\n}\r\n\r\nfunction setInitVerse () {\r\n  // Stores the chapter & verse from link hash , eg: #4:3\r\n  const chapterVerse = window.location.hash.substring(1).split(':')\r\n  // scroll to specific verse if it existed in link hash\r\n  if (chapterVerse.length > 1) {\r\n    window.location = window.location.hash\r\n    $('#verse option[value=\"' + window.location.hash + '\"]').prop('selected', true)\r\n  }\r\n}\r\n\r\n// Creates and add listing to the dropdown based on editions.json\r\nasync function createDropdown () {\r\n  // Sorts language & author , edition Name\r\n  const langEdition = []\r\n  for (const value of Object.values(editionsJSON)) {\r\n    let dropdownText\r\n    // check edition name ends with -la, then\r\n    if (/\\-la$/i.test(value.name)) { dropdownText = value.language + ' Latin - ' + value.author } else if (/\\-lad$/i.test(value.name)) { dropdownText = value.language + ' LatinD - ' + value.author } else { dropdownText = value.language + ' - ' + value.author }\r\n\r\n    langEdition.push([dropdownText, value.name, value.direction])\r\n  }\r\n  // sort by dropdowntext\r\n  langEdition.sort()\r\n\r\n  for (const [value, key, dir] of langEdition) { $('#translationdropdown').append('<option value=\"' + key + '\" data-dir=\"' + dir + '\">' + value + '</option>') }\r\n\r\n  // Create chapter dropdown\r\n  for (let i = 1; i <= CHAPTER_LENGTH; i++) { $('#chapter').append('<option value=\"' + i + '\">' + i + ' - ' + arabicChapters[i - 1] + ' (' + englishChapters[i - 1] + ')</option>') }\r\n}\r\n\r\nwindow.showTranslations = async function showTranslations () {\r\n  // Not a great way to do\r\n  $('#versescolumn').empty()\r\n  // Add the card element, so verses get shown in cards\r\n  $('#versescolumn').append('<ul id=\"verseslist\" class=\"card list-group list-group-flush\"></ul>')\r\n\r\n  const selectedValues = $('#translationdropdown').val().filter(elem => !/^\\s*$/.test(elem))\r\n\r\n  // Holds chapter & editionName\r\n  let chapEdDirHolder = []\r\n  const chapterNo = $('#chapter').val()\r\n  const linksArr = []\r\n  if (chapterNo === '') { return }\r\n\r\n  // Set the cookies\r\n  if (selectedValues.length > 0) {\r\n    Cookies.set('editions', JSON.stringify(selectedValues), { expires: 1000, path: '' })\r\n    Cookies.set('chapter', chapterNo, { expires: 1000, path: '' })\r\n    showSpinningWheel()\r\n  }\r\n\r\n  for (const edName of selectedValues) {\r\n    const linkFormed = editionsLink + '/' + edName + '/' + chapterNo + '.min.json'\r\n    linksArr.push(linkFormed)\r\n  }\r\n  const chaptersArr = await getChapterArr(linksArr)\r\n  chapEdDirHolder = chaptersArr.map((e, i) => [e, selectedValues[i], $('#translationdropdown option[value=\"' + selectedValues[i] + '\"]').attr('data-dir'), $('#translationdropdown option[value=\"' + selectedValues[i] + '\"]').text()])\r\n  // offset by these verses due for better scrolling due to fixed header\r\n  const offset = 1\r\n  // create empty element with verse 1 id , so to avoid issues due to offset\r\n  $('#verseslist').append('<span id=\"' + chapterNo + ':1\"> </span>')\r\n  removeSpinningWheel()\r\n  let classValues\r\n  for (let i = 1; i <= chaplength[chapterNo - 1]; i++) {\r\n    for (const [chapter, edName, dir, dropDownText] of chapEdDirHolder) {\r\n      const id = chapterNo + ':' + (i + offset)\r\n      if (dir === 'rtl') { classValues = edName + ' text-right list-group-item p-2' } else { classValues = edName + ' list-group-item p-2' }\r\n      $('#verseslist').append('<li class=\"' + classValues + '\" dir=\"auto\" id=\"' + id + '\"><span class=\"badge bg-light text-dark\" data-bs-toggle=\"tooltip\" title=\"' + dropDownText + '\">' + i + '</span>' + ' - ' + chapter[i - 1] + '</li>')\r\n    }\r\n  }\r\n\r\n  initializeTooltip()\r\n  createVerseDropDown()\r\n}\r\n\r\nfunction initializeTooltip () {\r\n  const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n  const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n    return new bootstrap.Tooltip(tooltipTriggerEl)\r\n  })\r\n}\r\n\r\nfunction createVerseDropDown () {\r\n  $('#verse').empty()\r\n\r\n  $('#verse').append('<option value=\"\" selected>Verse</option>')\r\n  const chapterNo = $('#chapter').val()\r\n  for (let i = 1; i <= chaplength[chapterNo - 1]; i++) {\r\n    const anchor = '#' + chapterNo + ':' + i\r\n    $('#verse').append('<option value=\"' + anchor + '\">' + i + '</option>')\r\n  }\r\n}\r\n\r\n// Fetches the translationLinks and returns the translations in optimized array form\r\n// Also assigns it to global translationsArr\r\nasync function getChapterArr (linksarr) {\r\n  const transJSON = await getLinksJSON(linksarr)\r\n  return transJSON.map(e => e.chapter.map(e => e.text))\r\n}\r\n\r\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\r\n// Get links async i.e in parallel\r\nasync function getLinksJSON (urls) {\r\n  return await Promise.all(\r\n    urls.map(url => fetch(url).then(response => response.json()))\r\n  ).catch(console.error)\r\n}\r\n\r\n// Show as loading spinning wheel,only if there isn't any other\r\nfunction showSpinningWheel () {\r\n  if ($('#spinningwheel').length === 0) {\r\n    $('#versescolumn').prepend(`<div  id=\"spinningwheel\">\r\n    <div class=\"text-center\">\r\n      <div class=\"spinner-border m-5\" role=\"status\">\r\n      </div>\r\n      </div>\r\n      </div>\r\n      `)\r\n  }\r\n}\r\n\r\nfunction removeSpinningWheel () {\r\n  $('#spinningwheel').remove()\r\n}\r\n\r\n// Creating line to [chapter,verseNo] mappings\r\n// Array containing number of verses in each chapters\r\nconst chaplength = [7, 286, 200, 176, 120, 165, 206, 75, 129, 109, 123, 111, 43, 52, 99, 128, 111, 110, 98, 135, 112, 78, 118, 64, 77, 227, 93, 88, 69, 60, 34, 30, 73, 54, 45, 83, 182, 88, 75, 85, 54, 53, 89, 59, 37, 35, 38, 29, 18, 45, 60, 49, 62, 55, 78, 96, 29, 22, 24, 13, 14, 11, 11, 18, 12, 12, 30, 52, 52, 44, 28, 28, 20, 56, 40, 31, 50, 40, 46, 42, 29, 19, 36, 25, 22, 17, 19, 26, 30, 20, 15, 21, 11, 8, 8, 19, 5, 8, 8, 11, 11, 8, 3, 9, 5, 4, 7, 3, 6, 3, 5, 4, 5, 6]\r\n// contains chapter verse mappings for each line\r\nconst mappings = []\r\nconst mappingsStr = []\r\n\r\nfor (let i = 1; i <= CHAPTER_LENGTH; i++) {\r\n  for (let j = 1; j <= chaplength[i - 1]; j++) {\r\n    mappings.push([i, j])\r\n    mappingsStr.push(i + ',' + j)\r\n  }\r\n}\r\n\r\nconst chaptersJSON = { 'Al-Faatiha': 'The Opening', 'Al-Baqara': 'The Cow', 'Aal-i-Imraan': 'The Family of Imraan', 'An-Nisaa': 'The Women', 'Al-Maaida': 'The Table', \"Al-An'aam\": 'The Cattle', \"Al-A'raaf\": 'The Heights', 'Al-Anfaal': 'The Spoils of War', 'At-Tawba': 'The Repentance', Yunus: 'Jonas', Hud: 'Hud', Yusuf: 'Joseph', \"Ar-Ra'd\": 'The Thunder', Ibrahim: 'Abraham', 'Al-Hijr': 'The Rock', 'An-Nahl': 'The Bee', 'Al-Israa': 'The Night Journey', 'Al-Kahf': 'The Cave', Maryam: 'Mary', 'Taa-Haa': 'Taa-Haa', 'Al-Anbiyaa': 'The Prophets', 'Al-Hajj': 'The Pilgrimage', 'Al-Muminoon': 'The Believers', 'An-Noor': 'The Light', 'Al-Furqaan': 'The Criterion', \"Ash-Shu'araa\": 'The Poets', 'An-Naml': 'The Ant', 'Al-Qasas': 'The Stories', 'Al-Ankaboot': 'The Spider', 'Ar-Room': 'The Romans', Luqman: 'Luqman', 'As-Sajda': 'The Prostration', 'Al-Ahzaab': 'The Clans', Saba: 'Sheba', Faatir: 'The Originator', Yaseen: 'Yaseen', 'As-Saaffaat': 'Those drawn up in Ranks', Saad: 'The letter Saad', 'Az-Zumar': 'The Groups', Ghafir: 'The Forgiver', Fussilat: 'Explained in detail', 'Ash-Shura': 'Consultation', 'Az-Zukhruf': 'Ornaments of gold', 'Ad-Dukhaan': 'The Smoke', 'Al-Jaathiya': 'Crouching', 'Al-Ahqaf': 'The Dunes', Muhammad: 'Muhammad', 'Al-Fath': 'The Victory', 'Al-Hujuraat': 'The Inner Apartments', Qaaf: 'The letter Qaaf', 'Adh-Dhaariyat': 'The Winnowing Winds', 'At-Tur': 'The Mount', 'An-Najm': 'The Star', 'Al-Qamar': 'The Moon', 'Ar-Rahmaan': 'The Beneficent', 'Al-Waaqia': 'The Inevitable', 'Al-Hadid': 'The Iron', 'Al-Mujaadila': 'The Pleading Woman', 'Al-Hashr': 'The Exile', 'Al-Mumtahana': 'She that is to be examined', 'As-Saff': 'The Ranks', \"Al-Jumu'a\": 'Friday', 'Al-Munaafiqoon': 'The Hypocrites', 'At-Taghaabun': 'Mutual Disillusion', 'At-Talaaq': 'Divorce', 'At-Tahrim': 'The Prohibition', 'Al-Mulk': 'The Sovereignty', 'Al-Qalam': 'The Pen', 'Al-Haaqqa': 'The Reality', \"Al-Ma'aarij\": 'The Ascending Stairways', Nooh: 'Noah', 'Al-Jinn': 'The Jinn', 'Al-Muzzammil': 'The Enshrouded One', 'Al-Muddaththir': 'The Cloaked One', 'Al-Qiyaama': 'The Resurrection', 'Al-Insaan': 'Man', 'Al-Mursalaat': 'The Emissaries', 'An-Naba': 'The Announcement', \"An-Naazi'aat\": 'Those who drag forth', Abasa: 'He frowned', 'At-Takwir': 'The Overthrowing', 'Al-Infitaar': 'The Cleaving', 'Al-Mutaffifin': 'Defrauding', 'Al-Inshiqaaq': 'The Splitting Open', 'Al-Burooj': 'The Constellations', 'At-Taariq': 'The Morning Star', \"Al-A'laa\": 'The Most High', 'Al-Ghaashiya': 'The Overwhelming', 'Al-Fajr': 'The Dawn', 'Al-Balad': 'The City', 'Ash-Shams': 'The Sun', 'Al-Lail': 'The Night', 'Ad-Dhuhaa': 'The Morning Hours', 'Ash-Sharh': 'The Consolation', 'At-Tin': 'The Fig', 'Al-Alaq': 'The Clot', 'Al-Qadr': 'The Power, Fate', 'Al-Bayyina': 'The Evidence', 'Az-Zalzala': 'The Earthquake', 'Al-Aadiyaat': 'The Chargers', \"Al-Qaari'a\": 'The Calamity', 'At-Takaathur': 'Competition', 'Al-Asr': 'The Declining Day, Epoch', 'Al-Humaza': 'The Traducer', 'Al-Fil': 'The Elephant', Quraish: 'Quraysh', \"Al-Maa'un\": 'Almsgiving', 'Al-Kawthar': 'Abundance', 'Al-Kaafiroon': 'The Disbelievers', 'An-Nasr': 'Divine Support', 'Al-Masad': 'The Palm Fibre', 'Al-Ikhlaas': 'Sincerity', 'Al-Falaq': 'The Dawn', 'An-Naas': 'Mankind' }\r\nconst arabicChapters = Object.keys(chaptersJSON)\r\nconst englishChapters = Object.values(chaptersJSON)\r\n\r\n// Register Service worker for Add to Home Screen option to work\r\nif ('serviceWorker' in navigator) { navigator.serviceWorker.register('./service-worker.js') }\r\n\r\n// Call initializer function in the beginning itself, to fetch all necessary JSON's\r\nlet initVar\r\nwindow.addEventListener('DOMContentLoaded', (event) => {\r\n  initVar = oneTimeFunc()\r\n})\r\n/*\r\nfunction getDirection (str) {\r\n  const divelem = document.createElement('div')\r\n  divelem.dir = 'auto'\r\n  divelem.innerHTML = str\r\n  divelem.style.display = 'none'\r\n  document.body.appendChild(divelem)\r\n  const direction = window.getComputedStyle(divelem).getPropertyValue('direction')\r\n  divelem.remove()\r\n  return direction\r\n}\r\nasync function getFont(url) {\r\n\r\n  let fontName = url.replace(/\\.[^\\.]*$/,\"\").replace(/.*\\//,\"\")\r\n\r\n  const font = new FontFace(fontName, 'url('+url+')');\r\n  // wait for font to be loaded\r\n  await font.load();\r\n  // add font to document\r\n  document.fonts.add(font);\r\n\r\n  return fontName\r\n\r\n}\r\n\r\nconst fontsLink = apiLink + '/fonts';\r\nlet fontEdition={\r\n  'ara-quranindopak': 'nastaleeq-v10-full',\r\n  'ara-qurannastaleeqn': 'hafs-nastaleeq-ver10',\r\n  'ara-quranbazzi': 'bazzi-v7-full',\r\n  'ara-qurandoori': 'doori-v8-full',\r\n  'ara-qurandoorinonun': 'uthmanic-doori1-ver08',\r\n  'ara-quranuthmanihaf': 'hafs-uthmanic-v14-full',\r\n  'ara-quranqaloon': 'qaloon-v8-full',\r\n  'ara-quranqumbul': 'qumbul-v7-full',\r\n  'ara-quranshouba': 'shouba-v7-full',\r\n  'ara-quransoosi': 'soosi-v8-full',\r\n  'ara-quransoosinonun': 'uthmanic-soosi1-ver08',\r\n  'ara-quranwarsh': 'warsh-v8-full'\r\n};\r\n\r\nfor(const [key , value] of Object.entries(fontEdition))\r\n      fontEdition[key] = fontsLink+'/'+value+'.woff2'\r\n\r\n*/\r\n"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$var$register","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$var$resolve","id","resolved","Error","register","resolve","JSON","parse","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURLCached","err","matches","stack","match","replace","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","getBundleURL","$824bc590bf0a3702ac7bd27152cb0639$var$resolve","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slice","slashIndex","lastIndexOf","$824bc590bf0a3702ac7bd27152cb0639$var$relative","from","to","fromParts","split","shift","divergeIndex","toParts","parts","push","apply","join","fromId","toId","_dirname","_relative","$48b4c8c3ed0756424237c4a736ec1a7f$var$editionsLink","$48b4c8c3ed0756424237c4a736ec1a7f$var$apiLink","$48b4c8c3ed0756424237c4a736ec1a7f$var$editionsJSON","async","$48b4c8c3ed0756424237c4a736ec1a7f$var$oneTimeFunc","$48b4c8c3ed0756424237c4a736ec1a7f$var$getLinksJSON","langEdition","value","values","dropdownText","test","name","language","author","direction","sort","key","dir","$","append","$48b4c8c3ed0756424237c4a736ec1a7f$var$arabicChapters","$48b4c8c3ed0756424237c4a736ec1a7f$var$englishChapters","$48b4c8c3ed0756424237c4a736ec1a7f$var$createDropdown","urlparams","currenturl","URL","window","location","searchParams","get","map","e","prop","editionCookie","Cookies","undefined","$48b4c8c3ed0756424237c4a736ec1a7f$var$setInitEditions","hash","chapterVerse","substring","chapterCookie","$48b4c8c3ed0756424237c4a736ec1a7f$var$setInitChapter","showTranslations","select2","theme","on","urls","Promise","all","url","fetch","then","response","json","catch","console","error","empty","selectedValues","val","filter","elem","chapEdDirHolder","chapterNo","linksArr","set","stringify","expires","path","prepend","edName","linkFormed","linksarr","chapter","text","$48b4c8c3ed0756424237c4a736ec1a7f$var$getChapterArr","attr","classValues","remove","$48b4c8c3ed0756424237c4a736ec1a7f$var$chaplength","dropDownText","tooltipTriggerList","call","document","querySelectorAll","tooltipTriggerEl","bootstrap","Tooltip","anchor","$48b4c8c3ed0756424237c4a736ec1a7f$var$createVerseDropDown","$48b4c8c3ed0756424237c4a736ec1a7f$var$mappings","$48b4c8c3ed0756424237c4a736ec1a7f$var$mappingsStr","j","$48b4c8c3ed0756424237c4a736ec1a7f$var$chaptersJSON","Al-Faatiha","Al-Baqara","Aal-i-Imraan","An-Nisaa","Al-Maaida","Al-An'aam","Al-A'raaf","Al-Anfaal","At-Tawba","Yunus","Hud","Yusuf","Ar-Ra'd","Ibrahim","Al-Hijr","An-Nahl","Al-Israa","Al-Kahf","Maryam","Taa-Haa","Al-Anbiyaa","Al-Hajj","Al-Muminoon","An-Noor","Al-Furqaan","Ash-Shu'araa","An-Naml","Al-Qasas","Al-Ankaboot","Ar-Room","Luqman","As-Sajda","Al-Ahzaab","Saba","Faatir","Yaseen","As-Saaffaat","Saad","Az-Zumar","Ghafir","Fussilat","Ash-Shura","Az-Zukhruf","Ad-Dukhaan","Al-Jaathiya","Al-Ahqaf","Muhammad","Al-Fath","Al-Hujuraat","Qaaf","Adh-Dhaariyat","At-Tur","An-Najm","Al-Qamar","Ar-Rahmaan","Al-Waaqia","Al-Hadid","Al-Mujaadila","Al-Hashr","Al-Mumtahana","As-Saff","Al-Jumu'a","Al-Munaafiqoon","At-Taghaabun","At-Talaaq","At-Tahrim","Al-Mulk","Al-Qalam","Al-Haaqqa","Al-Ma'aarij","Nooh","Al-Jinn","Al-Muzzammil","Al-Muddaththir","Al-Qiyaama","Al-Insaan","Al-Mursalaat","An-Naba","An-Naazi'aat","Abasa","At-Takwir","Al-Infitaar","Al-Mutaffifin","Al-Inshiqaaq","Al-Burooj","At-Taariq","Al-A'laa","Al-Ghaashiya","Al-Fajr","Al-Balad","Ash-Shams","Al-Lail","Ad-Dhuhaa","Ash-Sharh","At-Tin","Al-Alaq","Al-Qadr","Al-Bayyina","Az-Zalzala","Al-Aadiyaat","Al-Qaari'a","At-Takaathur","Al-Asr","Al-Humaza","Al-Fil","Quraish","Al-Maa'un","Al-Kawthar","Al-Kaafiroon","An-Nasr","Al-Masad","Al-Ikhlaas","Al-Falaq","An-Naas","$48b4c8c3ed0756424237c4a736ec1a7f$var$initVar","navigator","serviceWorker","addEventListener","event"],"version":3,"file":"index.835ff588.js.map"}