{"mappings":"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","sources":["code/data.js"],"sourcesContent":["\n\nasync function ready() {\n  document.querySelector('#mycontainer').insertAdjacentHTML('beforeend', searchBar)\n  let params = new URLSearchParams(document.location.search);\n  let chapter = params.get(\"chapter\");\n  let verse = params.get(\"verse\")\n\n  if(chapter === null || verse === null)\n  return\n\n  showSpinningWheel('#mycontainer','beforeend')\n  let [editionsJSON, isocodes] = await getJSON(['editions', 'isocodes/iso-codes'])\n  // sorted by language\n  let edtionsLangArr = Object.values(editionsJSON).map(e => [e.name, e.language, e.direction,e.author]).sort((a,b)=>a[1].localeCompare(b[1]))\n  let linksArr = []\n  // Table of content\n  let tableElem = getElementFromHTML(tableContainer).querySelector('.table')\n  let uniqueLangs = [...new Set(edtionsLangArr.map(e => e[1]))].sort()\n  for (let lang of uniqueLangs) {\n    let aElem = getElement('a', { href: `#${lang.toLowerCase()}` })\n    aElem.innerText = lang\n    let tr = getElement('tr')\n    let td = getElement('td', { class: 'text-center' })\n    td.appendChild(aElem)\n    tr.appendChild(td)\n    tableElem.querySelector('tbody').appendChild(tr)\n  }\n  removeSpinningWheel()\n\n  // Create endpoints for parallel fetch\n  for (let [editionName] of edtionsLangArr)\n    linksArr.push(`editions/${editionName}/${chapter}/${verse}`)\n\n  document.querySelector('#mycontainer').appendChild(tableElem)\n  showSpinningWheel('#mycontainer','beforeend')\n  let dataArr = await getJSON(linksArr)\n  let count = 0\n  let langCheck = []\n  for (let [editionName, lang, dirval,authorName] of edtionsLangArr) {\n    // create language heading only if one doesn't exists\n    if (!langCheck.includes(lang)) {\n      let h2 = getElement('h2', { id: lang.toLowerCase(), 'class': 'text-center' })\n      let aElem = getElement('a', { href: `#${lang.toLowerCase()}`, class: \"link-dark\" })\n      aElem.innerText = lang\n      h2.appendChild(aElem)\n      document.querySelector('#mycontainer').appendChild(h2)\n    }\n    document.querySelector('#mycontainer').appendChild(getQuranCardElem(dataArr[count], editionName, dirval, lang,authorName, isocodes))\n\n    langCheck.push(lang)\n\n    count++;\n  }\n\n  removeSpinningWheel()\n\n\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", ready);\n\nconst htmlQuranContainer =\n  `    \n<div class=\"card text-dark bg-light m-3\">\n<div class=\"card-body\">\n<div class=\"card-text lead m-1\"></div>\n</div>\n\n<span id=\"footercontainer\">\n</span>\n\n</div>\n`\n\nconst tableContainer =\n  `\n<table class=\"table table-hover  table-striped\">\n  <tbody>\n\n  </tbody>\n</table>\n`\n\nconst searchBar =\n  `\n<div class=\"m-3 d-none\">\n<form class=\"d-flex\" onsubmit=\"beginSearch(); return false\">\n  <input id=\"searchquery\" class=\"form-control mr-2\" type=\"search\" placeholder=\"Search Quran Verse\" aria-label=\"Search Quran Verse\" />\n  <button id=\"searchbtn\" class=\"btn btn-outline-info\" type=\"button\" onclick=\"beginSearch(); return false\">\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-search\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\"\n        d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\n    </svg>\n  </button>\n</form>\n</div>\n`\nconst CHAPTER_LENGTH = 114\n// Creating line to [chapter,verseNo] mappings\n// Array containing number of verses in each chapters\nconst chaplength = [7, 286, 200, 176, 120, 165, 206, 75, 129, 109, 123, 111, 43, 52, 99, 128, 111, 110, 98, 135, 112, 78, 118, 64, 77, 227, 93, 88, 69, 60, 34, 30, 73, 54, 45, 83, 182, 88, 75, 85, 54, 53, 89, 59, 37, 35, 38, 29, 18, 45, 60, 49, 62, 55, 78, 96, 29, 22, 24, 13, 14, 11, 11, 18, 12, 12, 30, 52, 52, 44, 28, 28, 20, 56, 40, 31, 50, 40, 46, 42, 29, 19, 36, 25, 22, 17, 19, 26, 30, 20, 15, 21, 11, 8, 8, 19, 5, 8, 8, 11, 11, 8, 3, 9, 5, 4, 7, 3, 6, 3, 5, 4, 5, 6]\n// contains chapter verse mappings for each line\nconst mappings = []\nconst mappingsStr = []\n\nfor (let i = 1; i <= CHAPTER_LENGTH; i++) {\n  for (let j = 1; j <= chaplength[i - 1]; j++) {\n    mappings.push([i, j])\n    mappingsStr.push(i + ',' + j)\n  }\n}\n\nconst chaptersJSON = { 'Al-Faatiha': 'The Opening', 'Al-Baqara': 'The Cow', 'Aal-i-Imraan': 'The Family of Imraan', 'An-Nisaa': 'The Women', 'Al-Maaida': 'The Table', \"Al-An'aam\": 'The Cattle', \"Al-A'raaf\": 'The Heights', 'Al-Anfaal': 'The Spoils of War', 'At-Tawba': 'The Repentance', Yunus: 'Jonas', Hud: 'Hud', Yusuf: 'Joseph', \"Ar-Ra'd\": 'The Thunder', Ibrahim: 'Abraham', 'Al-Hijr': 'The Rock', 'An-Nahl': 'The Bee', 'Al-Israa': 'The Night Journey', 'Al-Kahf': 'The Cave', Maryam: 'Mary', 'Taa-Haa': 'Taa-Haa', 'Al-Anbiyaa': 'The Prophets', 'Al-Hajj': 'The Pilgrimage', 'Al-Muminoon': 'The Believers', 'An-Noor': 'The Light', 'Al-Furqaan': 'The Criterion', \"Ash-Shu'araa\": 'The Poets', 'An-Naml': 'The Ant', 'Al-Qasas': 'The Stories', 'Al-Ankaboot': 'The Spider', 'Ar-Room': 'The Romans', Luqman: 'Luqman', 'As-Sajda': 'The Prostration', 'Al-Ahzaab': 'The Clans', Saba: 'Sheba', Faatir: 'The Originator', Yaseen: 'Yaseen', 'As-Saaffaat': 'Those drawn up in Ranks', Saad: 'The letter Saad', 'Az-Zumar': 'The Groups', Ghafir: 'The Forgiver', Fussilat: 'Explained in detail', 'Ash-Shura': 'Consultation', 'Az-Zukhruf': 'Ornaments of gold', 'Ad-Dukhaan': 'The Smoke', 'Al-Jaathiya': 'Crouching', 'Al-Ahqaf': 'The Dunes', Muhammad: 'Muhammad', 'Al-Fath': 'The Victory', 'Al-Hujuraat': 'The Inner Apartments', Qaaf: 'The letter Qaaf', 'Adh-Dhaariyat': 'The Winnowing Winds', 'At-Tur': 'The Mount', 'An-Najm': 'The Star', 'Al-Qamar': 'The Moon', 'Ar-Rahmaan': 'The Beneficent', 'Al-Waaqia': 'The Inevitable', 'Al-Hadid': 'The Iron', 'Al-Mujaadila': 'The Pleading Woman', 'Al-Hashr': 'The Exile', 'Al-Mumtahana': 'She that is to be examined', 'As-Saff': 'The Ranks', \"Al-Jumu'a\": 'Friday', 'Al-Munaafiqoon': 'The Hypocrites', 'At-Taghaabun': 'Mutual Disillusion', 'At-Talaaq': 'Divorce', 'At-Tahrim': 'The Prohibition', 'Al-Mulk': 'The Sovereignty', 'Al-Qalam': 'The Pen', 'Al-Haaqqa': 'The Reality', \"Al-Ma'aarij\": 'The Ascending Stairways', Nooh: 'Noah', 'Al-Jinn': 'The Jinn', 'Al-Muzzammil': 'The Enshrouded One', 'Al-Muddaththir': 'The Cloaked One', 'Al-Qiyaama': 'The Resurrection', 'Al-Insaan': 'Man', 'Al-Mursalaat': 'The Emissaries', 'An-Naba': 'The Announcement', \"An-Naazi'aat\": 'Those who drag forth', Abasa: 'He frowned', 'At-Takwir': 'The Overthrowing', 'Al-Infitaar': 'The Cleaving', 'Al-Mutaffifin': 'Defrauding', 'Al-Inshiqaaq': 'The Splitting Open', 'Al-Burooj': 'The Constellations', 'At-Taariq': 'The Morning Star', \"Al-A'laa\": 'The Most High', 'Al-Ghaashiya': 'The Overwhelming', 'Al-Fajr': 'The Dawn', 'Al-Balad': 'The City', 'Ash-Shams': 'The Sun', 'Al-Lail': 'The Night', 'Ad-Dhuhaa': 'The Morning Hours', 'Ash-Sharh': 'The Consolation', 'At-Tin': 'The Fig', 'Al-Alaq': 'The Clot', 'Al-Qadr': 'The Power, Fate', 'Al-Bayyina': 'The Evidence', 'Az-Zalzala': 'The Earthquake', 'Al-Aadiyaat': 'The Chargers', \"Al-Qaari'a\": 'The Calamity', 'At-Takaathur': 'Competition', 'Al-Asr': 'The Declining Day, Epoch', 'Al-Humaza': 'The Traducer', 'Al-Fil': 'The Elephant', Quraish: 'Quraysh', \"Al-Maa'un\": 'Almsgiving', 'Al-Kawthar': 'Abundance', 'Al-Kaafiroon': 'The Disbelievers', 'An-Nasr': 'Divine Support', 'Al-Masad': 'The Palm Fibre', 'Al-Ikhlaas': 'Sincerity', 'Al-Falaq': 'The Dawn', 'An-Naas': 'Mankind' }\nconst arabicChapters = Object.keys(chaptersJSON)\nconst englishChapters = Object.values(chaptersJSON)\n\n\nfunction capitalize(words) {\n  return words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\n}\n\nlet htmlparser = new DOMParser();\n\nfunction getElement(elementName, attributesObj) {\n  if (!attributesObj)\n    attributesObj = {}\n  let element = document.createElement(elementName);\n  for (let [key, value] of Object.entries(attributesObj)) {\n    element.setAttribute(key, value);\n  }\n  return element\n}\n\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\nlet extensions = [\".min.json\", \".json\"]\n\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\n// Get links async i.e in parallel\nasync function getJSON(endpoints, links) {\n  let returnSingle = false\n  if (!Array.isArray(endpoints)) {\n    endpoints = [endpoints]\n    returnSingle = true\n  }\n  let result = await Promise.all(\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\n  ).catch(console.error)\n  if (returnSingle)\n    return result[0]\n  return result\n}\n\n\nasync function fetchWithFallback(links, obj) {\n  let response;\n  for (let link of links) {\n    try {\n      response = await fetch(link, obj)\n      if (response.ok)\n        return response\n    } catch (e) { }\n  }\n  return response\n}\n\n// convert endpoint into multiple urls, including fallback urls\nfunction getURLs(endpoint, links) {\n  links = links || apiLinks\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\n}\n\nfunction getElementFromHTML(htmlString) {\n  return htmlparser.parseFromString(htmlString, \"text/html\");\n}\n\n// pass hadith object & get card element with all hadith info in it\nfunction getQuranCardElem(quran, editionName, dirval, lang, authorName, isocodes) {\n  let lowerLang = lang.toLowerCase()\n  let cardElem = getElementFromHTML(htmlQuranContainer).querySelector('.card')\n  cardElem.querySelector('.card-text').innerText = quran.text\n  let footerDiv = getElement('div', { class: \"card-footer\" })\n  let hrefVal = `quran:${editionName}:${quran.chapter}:${quran.verse}`\n  cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >${authorName}</a> <br>`);\n  cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Chapter ${quran.chapter} ${arabicChapters[quran.chapter - 1]}, Verse ${quran.verse}</a> <br>`);\n  cardElem.setAttribute('id', hrefVal)\n\n  cardElem.querySelector('.card-text').setAttribute('dir', dirval)\n  cardElem.querySelector('.card-text').setAttribute('lang', isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\n\n  return cardElem\n}\n\nwindow.beginSearch = function () {\n  let newparams = new URLSearchParams();\n  let searchquery = document.getElementById('searchquery').value\n  newparams.set('q', `site:fawazahmed0.github.io/quran ${searchquery}`)\n  window.open('https://www.google.com/search?' + newparams.toString(), '_blank');\n}\n\n\n// Show as loading spinning wheel,only if there isn't any other\nfunction showSpinningWheel(selector, position) {\n  if (!document.body.contains(document.querySelector('#spinningwheel')) ) {\n    document.querySelector(selector).insertAdjacentHTML(position,`<div  id=\"spinningwheel\">\n    <div class=\"text-center\">\n      <div class=\"spinner-border m-5\" role=\"status\">\n      </div>\n      </div>\n      </div>\n      `)\n  }\n}\n\nfunction removeSpinningWheel() {\n  if (document.body.contains(document.querySelector('#spinningwheel')) )\n  document.querySelector('#spinningwheel').remove()\n}"],"names":["document","addEventListener","async","querySelector","insertAdjacentHTML","$7fb36df3dd35402c$var$searchBar","params","URLSearchParams","location","search","chapter","get","verse","$7fb36df3dd35402c$var$showSpinningWheel","editionsJSON","isocodes","$7fb36df3dd35402c$var$getJSON","edtionsLangArr","Object","values","map","e","name","language","direction","author","sort","a","b","localeCompare","linksArr","tableElem","$7fb36df3dd35402c$var$getElementFromHTML","$7fb36df3dd35402c$var$tableContainer","uniqueLangs","Set","lang","aElem","$7fb36df3dd35402c$var$getElement","href","toLowerCase","innerText","tr","td","class","appendChild","$7fb36df3dd35402c$var$removeSpinningWheel","editionName","push","dataArr","count","langCheck","editionName1","lang1","dirval","authorName","includes","h2","id","$7fb36df3dd35402c$var$getQuranCardElem","$7fb36df3dd35402c$var$chaplength","$7fb36df3dd35402c$var$mappings","$7fb36df3dd35402c$var$mappingsStr","i","j","$7fb36df3dd35402c$var$chaptersJSON","Yunus","Hud","Yusuf","Ibrahim","Maryam","Luqman","Saba","Faatir","Yaseen","Saad","Ghafir","Fussilat","Muhammad","Qaaf","Nooh","Abasa","Quraish","$7fb36df3dd35402c$var$arabicChapters","keys","$7fb36df3dd35402c$var$htmlparser","DOMParser","elementName","attributesObj","element","createElement","key","value","entries","setAttribute","$7fb36df3dd35402c$var$apiLinks","$7fb36df3dd35402c$var$extensions","endpoints","links","returnSingle","Array","isArray","result","Promise","all","endpoint","obj","response","link","fetch","ok","$7fb36df3dd35402c$var$fetchWithFallback","ext","flat","$7fb36df3dd35402c$var$getURLs","then","json","catch","console","error","htmlString","parseFromString","quran","lowerLang","cardElem","text","footerDiv","hrefVal","cloneNode","from","querySelectorAll","at","iso1","iso2","selector","position","body","contains","remove","window","beginSearch","newparams","searchquery","getElementById","set","open","toString"],"version":3,"file":"data.85530342.js.map"}