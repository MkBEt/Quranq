{"mappings":"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","sources":["code/data.js"],"sourcesContent":["\n\nasync function ready() {\n  document.querySelector('#mycontainer').insertAdjacentHTML('beforeend', searchBar)\n  let params = new URLSearchParams(document.location.search);\n  let chapter = params.get(\"chapter\");\n  let verse = params.get(\"verse\")\n\n  if(chapter === null || verse === null)\n  return\n\n  showSpinningWheel('#mycontainer','beforeend')\n  let [editionsJSON, isocodes] = await getJSON(['editions', 'isocodes/iso-codes'])\n  // sorted by language\n  let edtionsLangArr = Object.values(editionsJSON).map(e => [e.name, e.language, e.direction,e.author]).sort((a,b)=>a[1].localeCompare(b[1]))\n  let linksArr = []\n  // Table of content\n  let tableElem = getElementFromHTML(tableContainer).querySelector('.table')\n  let uniqueLangs = [...new Set(edtionsLangArr.map(e => e[1]))].sort()\n  for (let lang of uniqueLangs) {\n    let aElem = getElement('a', { href: `#${lang.toLowerCase()}` })\n    aElem.innerText = lang\n    let tr = getElement('tr')\n    let td = getElement('td', { class: 'text-center' })\n    td.appendChild(aElem)\n    tr.appendChild(td)\n    tableElem.querySelector('tbody').appendChild(tr)\n  }\n  removeSpinningWheel()\n\n  // Create endpoints for parallel fetch\n  for (let [editionName] of edtionsLangArr)\n    linksArr.push(`editions/${editionName}/${chapter}/${verse}`)\n\n  document.querySelector('#mycontainer').appendChild(tableElem)\n  showSpinningWheel('#mycontainer','beforeend')\n  let dataArr = await getJSON(linksArr)\n  let count = 0\n  let langCheck = []\n  for (let [editionName, lang, dirval,authorName] of edtionsLangArr) {\n    // create language heading only if one doesn't exists\n    if (!langCheck.includes(lang)) {\n      let h2 = getElement('h2', { id: lang.toLowerCase(), 'class': 'text-center' })\n      let aElem = getElement('a', { href: `#${lang.toLowerCase()}`, class: \"link-dark\" })\n      aElem.innerText = lang\n      h2.appendChild(aElem)\n      document.querySelector('#mycontainer').appendChild(h2)\n    }\n    document.querySelector('#mycontainer').appendChild(getQuranCardElem(dataArr[count], editionName, dirval, lang,authorName, isocodes))\n\n    langCheck.push(lang)\n\n    count++;\n  }\n\n  removeSpinningWheel()\n\n\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", ready);\n\nconst htmlQuranContainer =\n  `    \n<div class=\"card text-dark bg-light m-3\">\n<div class=\"card-body\">\n<div class=\"card-text lead m-1\"></div>\n</div>\n\n<span id=\"footercontainer\">\n</span>\n\n</div>\n`\n\nconst tableContainer =\n  `\n<table class=\"table table-hover  table-striped\">\n  <tbody>\n\n  </tbody>\n</table>\n`\n\nconst searchBar =\n  `\n<div class=\"m-3 d-none\">\n<form class=\"d-flex\" onsubmit=\"beginSearch(); return false\">\n  <input id=\"searchquery\" class=\"form-control mr-2\" type=\"search\" placeholder=\"Search Quran Verse\" aria-label=\"Search Quran Verse\" />\n  <button id=\"searchbtn\" class=\"btn btn-outline-info\" type=\"button\" onclick=\"beginSearch(); return false\">\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-search\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\"\n        d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\n    </svg>\n  </button>\n</form>\n</div>\n`\nconst CHAPTER_LENGTH = 114\n// Creating line to [chapter,verseNo] mappings\n// Array containing number of verses in each chapters\nconst chaplength = [7, 286, 200, 176, 120, 165, 206, 75, 129, 109, 123, 111, 43, 52, 99, 128, 111, 110, 98, 135, 112, 78, 118, 64, 77, 227, 93, 88, 69, 60, 34, 30, 73, 54, 45, 83, 182, 88, 75, 85, 54, 53, 89, 59, 37, 35, 38, 29, 18, 45, 60, 49, 62, 55, 78, 96, 29, 22, 24, 13, 14, 11, 11, 18, 12, 12, 30, 52, 52, 44, 28, 28, 20, 56, 40, 31, 50, 40, 46, 42, 29, 19, 36, 25, 22, 17, 19, 26, 30, 20, 15, 21, 11, 8, 8, 19, 5, 8, 8, 11, 11, 8, 3, 9, 5, 4, 7, 3, 6, 3, 5, 4, 5, 6]\n// contains chapter verse mappings for each line\nconst mappings = []\nconst mappingsStr = []\n\nfor (let i = 1; i <= CHAPTER_LENGTH; i++) {\n  for (let j = 1; j <= chaplength[i - 1]; j++) {\n    mappings.push([i, j])\n    mappingsStr.push(i + ',' + j)\n  }\n}\n\nconst chaptersJSON = { 'Al-Faatiha': 'The Opening', 'Al-Baqara': 'The Cow', 'Aal-i-Imraan': 'The Family of Imraan', 'An-Nisaa': 'The Women', 'Al-Maaida': 'The Table', \"Al-An'aam\": 'The Cattle', \"Al-A'raaf\": 'The Heights', 'Al-Anfaal': 'The Spoils of War', 'At-Tawba': 'The Repentance', Yunus: 'Jonas', Hud: 'Hud', Yusuf: 'Joseph', \"Ar-Ra'd\": 'The Thunder', Ibrahim: 'Abraham', 'Al-Hijr': 'The Rock', 'An-Nahl': 'The Bee', 'Al-Israa': 'The Night Journey', 'Al-Kahf': 'The Cave', Maryam: 'Mary', 'Taa-Haa': 'Taa-Haa', 'Al-Anbiyaa': 'The Prophets', 'Al-Hajj': 'The Pilgrimage', 'Al-Muminoon': 'The Believers', 'An-Noor': 'The Light', 'Al-Furqaan': 'The Criterion', \"Ash-Shu'araa\": 'The Poets', 'An-Naml': 'The Ant', 'Al-Qasas': 'The Stories', 'Al-Ankaboot': 'The Spider', 'Ar-Room': 'The Romans', Luqman: 'Luqman', 'As-Sajda': 'The Prostration', 'Al-Ahzaab': 'The Clans', Saba: 'Sheba', Faatir: 'The Originator', Yaseen: 'Yaseen', 'As-Saaffaat': 'Those drawn up in Ranks', Saad: 'The letter Saad', 'Az-Zumar': 'The Groups', Ghafir: 'The Forgiver', Fussilat: 'Explained in detail', 'Ash-Shura': 'Consultation', 'Az-Zukhruf': 'Ornaments of gold', 'Ad-Dukhaan': 'The Smoke', 'Al-Jaathiya': 'Crouching', 'Al-Ahqaf': 'The Dunes', Muhammad: 'Muhammad', 'Al-Fath': 'The Victory', 'Al-Hujuraat': 'The Inner Apartments', Qaaf: 'The letter Qaaf', 'Adh-Dhaariyat': 'The Winnowing Winds', 'At-Tur': 'The Mount', 'An-Najm': 'The Star', 'Al-Qamar': 'The Moon', 'Ar-Rahmaan': 'The Beneficent', 'Al-Waaqia': 'The Inevitable', 'Al-Hadid': 'The Iron', 'Al-Mujaadila': 'The Pleading Woman', 'Al-Hashr': 'The Exile', 'Al-Mumtahana': 'She that is to be examined', 'As-Saff': 'The Ranks', \"Al-Jumu'a\": 'Friday', 'Al-Munaafiqoon': 'The Hypocrites', 'At-Taghaabun': 'Mutual Disillusion', 'At-Talaaq': 'Divorce', 'At-Tahrim': 'The Prohibition', 'Al-Mulk': 'The Sovereignty', 'Al-Qalam': 'The Pen', 'Al-Haaqqa': 'The Reality', \"Al-Ma'aarij\": 'The Ascending Stairways', Nooh: 'Noah', 'Al-Jinn': 'The Jinn', 'Al-Muzzammil': 'The Enshrouded One', 'Al-Muddaththir': 'The Cloaked One', 'Al-Qiyaama': 'The Resurrection', 'Al-Insaan': 'Man', 'Al-Mursalaat': 'The Emissaries', 'An-Naba': 'The Announcement', \"An-Naazi'aat\": 'Those who drag forth', Abasa: 'He frowned', 'At-Takwir': 'The Overthrowing', 'Al-Infitaar': 'The Cleaving', 'Al-Mutaffifin': 'Defrauding', 'Al-Inshiqaaq': 'The Splitting Open', 'Al-Burooj': 'The Constellations', 'At-Taariq': 'The Morning Star', \"Al-A'laa\": 'The Most High', 'Al-Ghaashiya': 'The Overwhelming', 'Al-Fajr': 'The Dawn', 'Al-Balad': 'The City', 'Ash-Shams': 'The Sun', 'Al-Lail': 'The Night', 'Ad-Dhuhaa': 'The Morning Hours', 'Ash-Sharh': 'The Consolation', 'At-Tin': 'The Fig', 'Al-Alaq': 'The Clot', 'Al-Qadr': 'The Power, Fate', 'Al-Bayyina': 'The Evidence', 'Az-Zalzala': 'The Earthquake', 'Al-Aadiyaat': 'The Chargers', \"Al-Qaari'a\": 'The Calamity', 'At-Takaathur': 'Competition', 'Al-Asr': 'The Declining Day, Epoch', 'Al-Humaza': 'The Traducer', 'Al-Fil': 'The Elephant', Quraish: 'Quraysh', \"Al-Maa'un\": 'Almsgiving', 'Al-Kawthar': 'Abundance', 'Al-Kaafiroon': 'The Disbelievers', 'An-Nasr': 'Divine Support', 'Al-Masad': 'The Palm Fibre', 'Al-Ikhlaas': 'Sincerity', 'Al-Falaq': 'The Dawn', 'An-Naas': 'Mankind' }\nconst arabicChapters = Object.keys(chaptersJSON)\nconst englishChapters = Object.values(chaptersJSON)\n\n\nfunction capitalize(words) {\n  return words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\n}\n\nlet htmlparser = new DOMParser();\n\nfunction getElement(elementName, attributesObj) {\n  if (!attributesObj)\n    attributesObj = {}\n  let element = document.createElement(elementName);\n  for (let [key, value] of Object.entries(attributesObj)) {\n    element.setAttribute(key, value);\n  }\n  return element\n}\n\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\nlet extensions = [\".min.json\", \".json\"]\n\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\n// Get links async i.e in parallel\nasync function getJSON(endpoints, links) {\n  let returnSingle = false\n  if (!Array.isArray(endpoints)) {\n    endpoints = [endpoints]\n    returnSingle = true\n  }\n  let result = await Promise.all(\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\n  ).catch(console.error)\n  if (returnSingle)\n    return result[0]\n  return result\n}\n\n\nasync function fetchWithFallback(links, obj) {\n  let response;\n  for (let link of links) {\n    try {\n      response = await fetch(link, obj)\n      if (response.ok)\n        return response\n    } catch (e) { }\n  }\n  return response\n}\n\n// convert endpoint into multiple urls, including fallback urls\nfunction getURLs(endpoint, links) {\n  links = links || apiLinks\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\n}\n\nfunction getElementFromHTML(htmlString) {\n  return htmlparser.parseFromString(htmlString, \"text/html\");\n}\n\n// pass hadith object & get card element with all hadith info in it\nfunction getQuranCardElem(quran, editionName, dirval, lang, authorName, isocodes) {\n  let lowerLang = lang.toLowerCase()\n  let cardElem = getElementFromHTML(htmlQuranContainer).querySelector('.card')\n  cardElem.querySelector('.card-text').innerText = quran.text\n  let footerDiv = getElement('div', { class: \"card-footer\" })\n  let hrefVal = `quran:${editionName}:${quran.chapter}:${quran.verse}`\n  cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >${authorName}</a> <br>`);\n  cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Chapter ${quran.chapter} ${arabicChapters[quran.chapter - 1]}, Verse ${quran.verse}</a> <br>`);\n  cardElem.setAttribute('id', hrefVal)\n\n  cardElem.querySelector('.card-text').setAttribute('dir', dirval)\n  cardElem.querySelector('.card-text').setAttribute('lang', isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\n\n  return cardElem\n}\n\nwindow.beginSearch = function () {\n  let newparams = new URLSearchParams();\n  let searchquery = document.getElementById('searchquery').value\n  newparams.set('q', `site:fawazahmed0.github.io/quran ${searchquery}`)\n  window.open('https://www.google.com/search?' + newparams.toString(), '_blank');\n}\n\n\n// Show as loading spinning wheel,only if there isn't any other\nfunction showSpinningWheel(selector, position) {\n  if (!document.body.contains(document.querySelector('#spinningwheel')) ) {\n    document.querySelector(selector).insertAdjacentHTML(position,`<div  id=\"spinningwheel\">\n    <div class=\"text-center\">\n      <div class=\"spinner-border m-5\" role=\"status\">\n      </div>\n      </div>\n      </div>\n      `)\n  }\n}\n\nfunction removeSpinningWheel() {\n  if (document.body.contains(document.querySelector('#spinningwheel')) )\n  document.querySelector('#spinningwheel').remove()\n}"],"names":["$kAkBg","parcelRequire","_ready","asyncToGenerator","$parcel$interopDefault","$jO2Au","mark","_callee","params","chapter","verse","ref","editionsJSON","isocodes","edtionsLangArr","linksArr","tableElem","uniqueLangs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","lang","aElem","tr","td","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_iterator1","_step1","_value","editionName","dataArr","count","langCheck","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_value1","editionName1","lang1","dirval","authorName","h2","aElem1","document","querySelector","insertAdjacentHTML","$9c22a0062414f068$var$searchBar","URLSearchParams","location","search","get","$9c22a0062414f068$var$showSpinningWheel","$9c22a0062414f068$var$getJSON","_ctx","t0","slicedToArray","call","t1","Object","values","map","e","name","language","direction","author","sort","a","b","localeCompare","$9c22a0062414f068$var$getElementFromHTML","$9c22a0062414f068$var$tableContainer","toConsumableArray","Set","undefined","Symbol","iterator","next","done","value","$9c22a0062414f068$var$getElement","href","concat","toLowerCase","innerText","class","appendChild","t2","return","$9c22a0062414f068$var$removeSpinningWheel","push","t3","sent","includes","id","$9c22a0062414f068$var$getQuranCardElem","t4","apply","this","arguments","addEventListener","$9c22a0062414f068$var$chaplength","$9c22a0062414f068$var$mappings","$9c22a0062414f068$var$mappingsStr","i","j","$9c22a0062414f068$var$chaptersJSON","Yunus","Hud","Yusuf","Ibrahim","Maryam","Luqman","Saba","Faatir","Yaseen","Saad","Ghafir","Fussilat","Muhammad","Qaaf","Nooh","Abasa","Quraish","$9c22a0062414f068$var$arabicChapters","keys","$9c22a0062414f068$var$htmlparser","DOMParser","elementName","attributesObj","element","createElement","entries","key","setAttribute","err","$9c22a0062414f068$var$apiLinks","$9c22a0062414f068$var$extensions","endpoints","links","_getJSON","returnSingle","result","Array","isArray","Promise","all","endpoint","$9c22a0062414f068$var$fetchWithFallback","$9c22a0062414f068$var$getURLs","then","response","json","catch","console","error","obj","_fetchWithFallback","link","fetch","ok","ext","flat","htmlString","parseFromString","quran","lowerLang","cardElem","text","footerDiv","hrefVal","cloneNode","from","querySelectorAll","at","iso1","iso2","selector","position","body","contains","remove","window","beginSearch","newparams","searchquery","getElementById","set","open","toString"],"version":3,"file":"data.917887ac.js.map"}